[33mcommit 09eb51f2f9af30715a45639b6bc952067e79d3aa[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Vincent Dupont <icilapub@gmx.com>
Date:   Sun Jun 12 07:25:45 2022 +0000

    First commit

[1mdiff --git a/add.css b/add.css[m
[1mnew file mode 100644[m
[1mindex 0000000..f436902[m
[1m--- /dev/null[m
[1m+++ b/add.css[m
[36m@@ -0,0 +1,156 @@[m
[32m+[m[32m.presentation {[m
[32m+[m[32m    background-color: var(--color-tertiary);[m
[32m+[m[32m    color: var(--color-dark);[m
[32m+[m[32m    padding: calc(var(--spacing)*2);[m
[32m+[m[32m    margin: 0 auto;[m
[32m+[m[32m    border-radius: var(--border-radius);[m
[32m+[m[32m    line-height: 2rem;[m
[32m+[m[32m    font-size: var(--font-size);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*Nom du site stylis√©*/[m
[32m+[m[32m.reminder {[m
[32m+[m[32m    font-family: var(--typo-title);[m
[32m+[m[32m    font-size: 3rem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*NAV BAR*/[m
[32m+[m
[32m+[m
[32m+[m[32m/* Bouton pour le th√®me jour/nuit */[m
[32m+[m
[32m+[m[32m.toggle {[m
[32m+[m[32m    display: flex;[m
[32m+[m[32m    justify-content: center;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbody.dark {[m
[32m+[m[32m  background-color: var(--color-dark);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.label-theme {[m
[32m+[m[32m  background-color: var(--color-dark);[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  height: 26px;[m
[32m+[m[32m  width: 48px;[m
[32m+[m[32m  border-radius: 30px;[m
[32m+[m[32m  position: relative;[m
[32m+[m[32m  align-items: center;[m
[32m+[m[32m  justify-content: space-between;[m
[32m+[m[32m  padding: 5px;[m
[32m+[m[32m  transform: scale(1.5);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.theme {[m
[32m+[m[32m  opacity: 0;[m
[32m+[m[32m  position: absolute;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.ball {[m
[32m+[m[32m  height: 22px;[m
[32m+[m[32m  width: 22px;[m
[32m+[m[32m  background-color: #fff;[m
[32m+[m[32m  position: absolute;[m
[32m+[m[32m  top: 2px;[m
[32m+[m[32m  left: 2px;[m
[32m+[m[32m  border-radius: 50%;[m
[32m+[m[32m  transition: left .2s linear;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.theme:checked + .label-theme .ball {[m
[32m+[m[32m  /*transform: translateX(24px);*/[m
[32m+[m[32m  left: 24px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m
[32m+[m[32m.fa-moon {[m
[32m+[m[32m  color: #f1c40f;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.fa-sun {[m
[32m+[m[32m  color: #f39c12;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.btn {[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    cursor: pointer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* MENU BURGER */[m
[32m+[m
[32m+[m[32mul {[m
[32m+[m[32m  list-style: none;[m
[32m+[m[32m  padding-left: 5%;[m
[32m+[m[32m}[m
[32m+[m[32m.top-ul {[m
[32m+[m[32m  margin: 40% 0 70%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mli {[m
[32m+[m[32m  color: white;[m
[32m+[m[32m  margin: 0 0 10px 0;[m
[32m+[m[41m  [m
[32m+[m[32m  font-size: 1.4em;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mli:hover {[m
[32m+[m[32m  color: orange;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav-menu {[m
[32m+[m[32m  position: fixed;[m
[32m+[m[41m  [m
[32m+[m[32m  width: 160px;[m
[32m+[m[32m  height: 100%;[m
[32m+[m[32m  background: #111;[m
[32m+[m[32m  border-right: solid orange 1px;[m
[32m+[m[41m  [m
[32m+[m[32m  left: -220px;[m
[32m+[m[41m  [m
[32m+[m[32m  transition: all 0.2s ease-out;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.show {[m
[32m+[m[32m  left: 0px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* Burger Menu */[m
[32m+[m[32m.burger-menu-container {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  justify-content: flex-start;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.nav-menu-btn {[m
[32m+[m[32m  display: block;[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[41m  [m
[32m+[m[32m  padding: 6px 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.bar1, .bar2, .bar3 {[m
[32m+[m[32m  width: 35px;[m
[32m+[m[32m  height: 5px;[m
[32m+[m[32m  background: #fff;[m
[32m+[m[32m  margin: 0px 10px 6px;[m
[32m+[m[41m  [m
[32m+[m[32m  transition: 0.4s;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.change .bar1 {[m
[32m+[m[32m  -webkit-transform: rotate(-45deg) translate(-9px, 6px);[m
[32m+[m[32m  transform: rotate(-45deg) translate(-9px, 6px);[m
[32m+[m[32m  background: orange;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.change .bar2 {[m
[32m+[m[32m  opacity: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.change .bar3 {[m
[32m+[m[32m  -webkit-transform: rotate(45deg) translate(-8px, -8px);[m
[32m+[m[32m  transform: rotate(45deg) translate(-8px, -8px);[m
[32m+[m[32m  background: orange;[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/autoload.php b/autoload.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c1c28ab[m
[1m--- /dev/null[m
[1m+++ b/autoload.php[m
[36m@@ -0,0 +1,38 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// on met des alias pour que √ßa nous soit plus clair, le dossier o√π on va chercher[m
[32m+[m[32m// le principe c'est que ce qui va dans lib est immuable d'un projet √† l'autre, App r√©cup√®re ce qui change d'un projet √† l'autre[m
[32m+[m[32mconst ALIASES = [[m
[32m+[m[32m    'Symfonette' => 'lib',[m
[32m+[m[32m    'App' => 'src'[m
[32m+[m[32m    ];[m
[32m+[m
[32m+[m[32m// on met une fonction anonyme dedans, pour l'appeler d√®s qu'on lance spl_autoload_register()[m[41m    [m
[32m+[m[32mspl_autoload_register(function (string $class):void {[m
[32m+[m[32m    // √† la base il re√ßoit nameplace\class; on met \\ parce que c'est un caract√®re d'√©chappement, √ßa √©vite qu'il fasse s'√©chapper le ' suivant[m
[32m+[m[32m    // le explode s√©pare le chemin de la classe et met chaque partie dans un tableau[m
[32m+[m[32m    //var_dump($class);[m
[32m+[m[32m    $namespaceParts = explode('\\', $class);[m
[32m+[m[32m    //var_dump($namespaceParts);[m
[32m+[m[41m    [m
[32m+[m[32m    // si tu trouves le premier √©l√©ment du tableau $namespaceParts dans le tableau ALIASES (Symfonette ou App)[m
[32m+[m[32m    if (in_array($namespaceParts[0], array_keys(ALIASES))) {[m
[32m+[m[32m        // on remplace ce namespace par son alias (lib ou src)[m
[32m+[m[32m        $namespaceParts[0] = ALIASES[$namespaceParts[0]];[m
[32m+[m[32m    } else {[m
[32m+[m[32m        // Exception est une classe de PHP, qui met un message d'erreur[m
[32m+[m[32m        throw new Exception('Namespace non valide "' . $namespaceParts[0] . '". Le namespace doit commencer par "Symfonette" ou "App');[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // DIRECTORY_SEPARATOR est une constante de PHP, qui est le s√©parateur de chaque dossier de r√©pertoire[m
[32m+[m[32m    // On regroupe les √©l√©ments du tableau avec le dossier qui a √©t√© remplac√© (Symfonette => lib, App => src)[m
[32m+[m[32m    $filepath = implode(DIRECTORY_SEPARATOR, $namespaceParts) . '.php';[m
[32m+[m[32m    // Si le fichier est inexistant, message d'erreur[m
[32m+[m[32m    if (!file_exists($filepath)) {[m
[32m+[m[32m        throw new Exception("Fichier " . $filepath . "inexistant pour la classe " . $class . ".");[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    require $filepath;[m
[32m+[m[32m});[m
[32m+[m
[32m+[m[32m// Le but est par exemple de passer d'un Symfonette\Router √† un lib\Router, pour lire directement le Controlleur[m
\ No newline at end of file[m
[1mdiff --git a/config/database.php b/config/database.php[m
[1mnew file mode 100644[m
[1mindex 0000000..40fe37f[m
[1m--- /dev/null[m
[1m+++ b/config/database.php[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'host'     => 'db.3wa.io',[m
[32m+[m[32m    'port'     => '3306',[m
[32m+[m[32m    'dbname'   => 'vincentdupont_projet',[m
[32m+[m[32m    'username' => 'vincentdupont',[m
[32m+[m[32m    'password' => 'd582cc515c2e0404741d4b0d7b54ebb6'[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/config/routes.php b/config/routes.php[m
[1mnew file mode 100644[m
[1mindex 0000000..792072f[m
[1m--- /dev/null[m
[1m+++ b/config/routes.php[m
[36m@@ -0,0 +1,49 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mreturn [[m
[32m+[m[32m    'app_index' => [[m
[32m+[m[32m      'controller' => App\Controller\AppController::class,[m
[32m+[m[32m      'method' => 'index'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_user_login' => [[m
[32m+[m[32m      'controller' => App\Controller\UserController::class,[m
[32m+[m[32m      'method' => 'login'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_user_signup' => [[m
[32m+[m[32m      'controller' => App\Controller\UserController::class,[m
[32m+[m[32m      'method' => 'signup'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_user_logout' => [[m
[32m+[m[32m      'controller' => App\Controller\UserController::class,[m
[32m+[m[32m      'method' => 'logout'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_user_setting' => [[m
[32m+[m[32m      'controller' => App\Controller\UserController::class,[m
[32m+[m[32m      'method' => 'setting'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_user_list' => [[m
[32m+[m[32m      'controller' => App\Controller\UserController::class,[m
[32m+[m[32m      'method' => 'list'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_user_delete' => [[m
[32m+[m[32m      'controller' => App\Controller\UserController::class,[m
[32m+[m[32m      'method' => 'delete'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_bookmark_index' => [[m
[32m+[m[32m      'controller' => App\Controller\BookmarkController::class,[m
[32m+[m[32m      'method' => 'index'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_bookmark_add' => [[m
[32m+[m[32m      'controller' => App\Controller\BookmarkController::class,[m
[32m+[m[32m      'method' => 'add'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_bookmark_edit' => [[m
[32m+[m[32m      'controller' => App\Controller\BookmarkController::class,[m
[32m+[m[32m      'method' => 'edit'[m
[32m+[m[32m    ],[m
[32m+[m[32m    'app_bookmark_delete' => [[m
[32m+[m[32m      'controller' => App\Controller\BookmarkController::class,[m
[32m+[m[32m      'method' => 'delete'[m
[32m+[m[32m    ],[m
[32m+[m[32m    // les autres routes...[m
[32m+[m[32m];[m
\ No newline at end of file[m
[1mdiff --git a/index.php b/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4ca7304[m
[1m--- /dev/null[m
[1m+++ b/index.php[m
[36m@@ -0,0 +1,8 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32m// use namespace/class; espace virtuel o√π on place les classes[m
[32m+[m[32m// autoload va charger les classes qu'on va utiliser automatiquement[m
[32m+[m
[32m+[m[32muse Symfonette\Router;[m
[32m+[m[32mrequire 'autoload.php';[m
[32m+[m[32mnew Router();[m
\ No newline at end of file[m
[1mdiff --git a/lib/Authenticator.php b/lib/Authenticator.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0c2ba4a[m
[1m--- /dev/null[m
[1m+++ b/lib/Authenticator.php[m
[36m@@ -0,0 +1,36 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace Symfonette;[m
[32m+[m
[32m+[m[32muse App\Model\Manager\UserManager;[m
[32m+[m[32muse App\Model\Entity\User;[m
[32m+[m[32muse Symfonette\Controller;[m
[32m+[m
[32m+[m[32mclass Authenticator {[m
[32m+[m
[32m+[m[32m    // Une fonction statique permet d'y acc√©der sans instancier la classe[m
[32m+[m[32m    static public function startSession(): void {[m
[32m+[m[32m        session_start();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    static public function login(int $id): void {[m
[32m+[m[32m        // $_SESSION est une Superglobale! (comme $_GET ou $_POST)[m
[32m+[m[32m        $_SESSION['user_id'] = $id;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    static public function logout(): void {[m
[32m+[m[32m        $_SESSION['user_id'] = null;[m
[32m+[m[32m        session_destroy();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function isAuthenticated(): bool {[m
[32m+[m[32m        // Fonction ternaire: s'il existe une varriable de session, on return True autrement on return false[m
[32m+[m[32m        return isset($_SESSION['user_id']) ? true : false;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getUser(): User {[m
[32m+[m[32m        $userManager = new UserManager();[m
[32m+[m[32m        return $userManager->find($_SESSION['user_id']);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/lib/Controller.php b/lib/Controller.php[m
[1mnew file mode 100644[m
[1mindex 0000000..e1984f0[m
[1m--- /dev/null[m
[1m+++ b/lib/Controller.php[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace Symfonette;[m
[32m+[m
[32m+[m[32mabstract class Controller {[m
[32m+[m[41m    [m
[32m+[m[32m    // Protected parce qu'on ne va l'appeler qu'√† l'int√©rieur des classes (enfants compris)[m
[32m+[m[32m    // $data est un tableau optionnel[m
[32m+[m[32m    protected function renderView(string $template, array $data = []): void {[m
[32m+[m[32m        // appelle la m√©thode renderView de la classe View; :: = la m√©thode qui appartient √† cette classe[m
[32m+[m[32m        View::renderView($template, $data);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m	[32mprotected function redirectToRoute(string $name, array $params = []): void {[m
[32m+[m[32m        Router::redirectToRoute($name, $params);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/lib/Manager.php b/lib/Manager.php[m
[1mnew file mode 100644[m
[1mindex 0000000..a17759f[m
[1m--- /dev/null[m
[1m+++ b/lib/Manager.php[m
[36m@@ -0,0 +1,29 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace Symfonette;[m
[32m+[m
[32m+[m[32mabstract class Manager {[m
[32m+[m
[32m+[m[32m    // Cet attribut est un objet de la classe PDO; donc on ajoute devant \PDO pour indiquer qu'on cherche dans ce namespace (Symfonette\PDO)[m
[32m+[m[32m    protected \PDO $connection;[m
[32m+[m
[32m+[m[32m    public function __construct() {[m
[32m+[m[32m        // On r√©cup√®re la configuration de la BDD[m
[32m+[m[32m        $dbConfig = require './config/database.php';[m
[32m+[m
[32m+[m[32m        $db = new \PDO([m
[32m+[m[32m            "mysql:host=" . $dbConfig['host'] . ";port=" . $dbConfig['port'] . ";dbname=" . $dbConfig['dbname'],[m
[32m+[m[32m            $dbConfig['username'],[m
[32m+[m[32m            $dbConfig['password'][m
[32m+[m[32m        );[m
[32m+[m[32m        // Ca affiche les erreurs quand on fait les requ√™tes SQL[m
[32m+[m[32m        $db->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);[m
[32m+[m[32m        // C'est le mode de r√©cup√©ration (sous forme de tableau associatif uniquement)[m
[32m+[m[32m        $db->setAttribute(\PDO::ATTR_DEFAULT_FETCH_MODE, \PDO::FETCH_ASSOC);[m
[32m+[m[32m        // Requ√™te tir√©e par les cheveux qui permet d'utiliser Execute sans avoir √† passer par la m√©thode bind[m
[32m+[m		[32m$db->setAttribute(\PDO::ATTR_EMULATE_PREPARES, FALSE);[m
[32m+[m[32m        $db->exec('SET NAMES utf8');[m
[32m+[m[32m        $this->connection = $db;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/lib/Router.php b/lib/Router.php[m
[1mnew file mode 100644[m
[1mindex 0000000..026fa45[m
[1m--- /dev/null[m
[1m+++ b/lib/Router.php[m
[36m@@ -0,0 +1,67 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace Symfonette;[m
[32m+[m
[32m+[m[32mclass Router {[m
[32m+[m[41m    [m
[32m+[m[32m    private $routes;[m
[32m+[m[41m    [m
[32m+[m[32m    public function __construct() {[m
[32m+[m[32m        // c'est la raison pour laquelle on a fait un return dans le fichier config[m
[32m+[m[32m        $this->routes = require_once './config/routes.php';[m
[32m+[m[32m        // la m√©thode routing est d√©finie dessous[m
[32m+[m[32m        $this->routing();[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function routing(): void {[m
[32m+[m[32m        //On v√©rifie que la route appel√©e est bien une cl√© du tableau dans routes.php (app_index, app_add, ...)[m
[32m+[m[32m        $availableRouteNames = array_keys($this->routes);[m
[32m+[m
[32m+[m[32m        // si $_GET['page'] existe et qu'il est dans le tableau[m
[32m+[m[32m        if (isset($_GET['page']) && in_array($_GET['page'], $availableRouteNames, true)) {[m
[32m+[m[32m            $route = $this->routes[$_GET['page']];[m
[32m+[m[32m            //var_dump($route);[m
[32m+[m[41m            [m
[32m+[m[32m            if ([m
[32m+[m[32m                !isset($route['controller'])[m
[32m+[m[32m                || !isset($route['method'])[m
[32m+[m[32m                // class_exist est une fonction de PHP, elle v√©rifie si une classe... existe bien[m
[32m+[m[32m                || !class_exists($route['controller'])[m
[32m+[m[32m                || !method_exists($route['controller'], $route['method'])[m
[32m+[m[32m            ) {[m
[32m+[m[32m                header("Location: index.php?page=app_index");[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                header("Location: index.php?page=app_index");[m
[32m+[m[32m            }[m
[32m+[m[41m            [m
[32m+[m[32m        // On aurait pu faire un $authenticator = new Authenticator puis $authenticator->startSession()[m
[32m+[m[32m        // mais √ßa n'a pas d'int√©r√™t de faire une nouvelle instance, on n'a pas de donn√©es √† ajouter; autant utiliser une fonction statique[m
[32m+[m[32m        Authenticator::startSession();[m
[32m+[m
[32m+[m[32m        // Si on n'a pas √©t√© redirig√©, on instancie un controlleur[m
[32m+[m[32m        $controller = new $route['controller'];[m
[32m+[m[32m        // Permet d'appeler la m√©thode, la syntaxe est particuli√®re!![m
[32m+[m[32m        $controller->{$route['method']}();[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // M√©thode statique = ne peut √™tre appel√©e que par une classe[m
[32m+[m[32m    public static function redirectToRoute(string $name, array $params = []): void {[m
[32m+[m[32m        // $_SERVER['SCRIPT_NAME'] = fait appel au chemin complet et au nom du fichier[m
[32m+[m[32m        // et on rajoute la route vers laquelle on redirige[m
[32m+[m[32m        $uri = $_SERVER['SCRIPT_NAME'] . "?page=" . $name;[m
[32m+[m
[32m+[m[32m        if (!empty($params)) {[m
[32m+[m[32m            //On parcourt le tableau $param et on applique la fonction[m
[32m+[m[41m            [m
[32m+[m[32m            array_walk($params, function(&$val, $key) {[m
[32m+[m[32m                $val = urlencode((string) $key) . '=' . urlencode((string) $val);[m
[32m+[m[32m            });[m
[32m+[m[32m            // Permet de faire passer plusieurs param√®tres GET et de les ajouter √† l'url avec &[m
[32m+[m[32m            $uri .= '&' . implode('&', $params);[m
[32m+[m[32m        }[m
[32m+[m[32m        // On fait la redirection avec header[m
[32m+[m[32m        header("Location: " . $uri);[m
[32m+[m[32m        die;[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/lib/View.php b/lib/View.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f379f61[m
[1m--- /dev/null[m
[1m+++ b/lib/View.php[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace Symfonette;[m
[32m+[m
[32m+[m[32mabstract class View {[m
[32m+[m
[32m+[m[32m    private const PAGES_PATH = "./views/pages/";[m
[32m+[m[32m    private const LAYOUT_PATH = "./views/layout.php";[m
[32m+[m
[32m+[m[32m    public static function renderView(string $template, array $data = []) {[m
[32m+[m[32m        // self fait appel √† la classe courante[m
[32m+[m[32m      $templatePath =  self::PAGES_PATH . $template;[m
[32m+[m[32m      $data = $data;[m
[32m+[m[32m      $auth = new Authenticator();[m
[32m+[m[32m      require self::LAYOUT_PATH;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/scripts.js b/scripts.js[m
[1mnew file mode 100644[m
[1mindex 0000000..e48d07a[m
[1m--- /dev/null[m
[1m+++ b/scripts.js[m
[36m@@ -0,0 +1,12 @@[m
[32m+[m[32mconst theme = document.getElementById('theme');[m
[32m+[m
[32m+[m[32mtheme.addEventListener('change', () => {[m
[32m+[m[32m  document.body.classList.toggle('dark');[m
[32m+[m[32m})[m
[32m+[m
[32m+[m[32mfunction toggleFunc(e) {[m
[32m+[m[32m  e.classList.toggle("change");[m
[32m+[m[32m  document.getElementById("btn-toggle")[m
[32m+[m[32m    .classList[m
[32m+[m[32m    .toggle("show");[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Controller/AppController.php b/src/Controller/AppController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..989f9b8[m
[1m--- /dev/null[m
[1m+++ b/src/Controller/AppController.php[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Controller;[m
[32m+[m
[32m+[m[32muse Symfonette\Controller;[m
[32m+[m
[32m+[m[32mclass AppController extends Controller {[m
[32m+[m[41m    [m
[32m+[m[32m    public function index(): void {[m
[32m+[m[32m        $this->renderView('app/index.php', [[m
[32m+[m[32m        'title' => 'Accueil'[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Controller/BookmarkController.php b/src/Controller/BookmarkController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..830b8ce[m
[1m--- /dev/null[m
[1m+++ b/src/Controller/BookmarkController.php[m
[36m@@ -0,0 +1,32 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Controller;[m
[32m+[m
[32m+[m[32muse Symfonette\Controller;[m
[32m+[m
[32m+[m[32mclass BookmarkController extends Controller {[m
[32m+[m[41m    [m
[32m+[m[32m    public function index(): void {[m
[32m+[m[32m        $this->renderView('bookmark/index.php', [[m
[32m+[m[32m        'title' => 'Favoris'[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function add(): void {[m
[32m+[m[32m        $this->renderView('bookmark/add.php', [[m
[32m+[m[32m        'title' => 'Ajouter un favori'[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function edit(): void {[m
[32m+[m[32m        $this->renderView('bookmark/edit.php', [[m
[32m+[m[32m        'title' => 'Editer un favori'[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function delete(): void {[m
[32m+[m[32m        $this->redirectToRoute('app_bookmark_index');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Controller/UserController.php b/src/Controller/UserController.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4e2a88a[m
[1m--- /dev/null[m
[1m+++ b/src/Controller/UserController.php[m
[36m@@ -0,0 +1,145 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Controller;[m
[32m+[m
[32m+[m[32muse Symfonette\Controller;[m
[32m+[m[32muse Symfonette\Authenticator;[m
[32m+[m[32muse App\Model\Manager\UserManager;[m
[32m+[m[32muse App\Model\Entity\User;[m
[32m+[m
[32m+[m[32mclass UserController extends Controller {[m
[32m+[m
[32m+[m[32m    public function signup(): void {[m
[32m+[m[32m        // On initie le tableau $error[m
[32m+[m[32m        $errors = [];[m
[32m+[m[32m        // On v√©rifie que la requ√™te POST n'est pas vide[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            // On v√©rifie que tous les champs sont bien remplis[m
[32m+[m[32m            if (empty($_POST['email']) || empty($_POST['nickname']) || empty($_POST['password']) || empty($_POST['confirm_password'])) {[m
[32m+[m[32m                $errors[] = "Tous les champs doivent √™tre saisis.";[m
[32m+[m[32m            } else {[m
[32m+[m[32m                // On v√©rifie 1 √† 1 les champs, qu'ils respectent bien les crit√®res[m
[32m+[m[41m                [m
[32m+[m[32m                // V√©rifie que le pseudonyme fait minimum 4 caract√®res et au plus 255 caract√®res[m
[32m+[m[32m                $nicknameLength = strlen($_POST['nickname']);[m
[32m+[m[32m                if ($nicknameLength < 4 || $nicknameLength > 256) {[m
[32m+[m[32m                    $errors[] = "Le pseudonyme doit faire entre 4 et 255 caract√®res.";[m[41m [m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                // V√©rifie que mail n'est pas invalide; filter_var est une m√©thode magique de PHP[m
[32m+[m[32m                if (!filter_var($_POST['email'], FILTER_VALIDATE_EMAIL)) {[m
[32m+[m[32m                    $errors[] = "Format de l'adresse email non valide.";[m
[32m+[m[32m                }[m
[32m+[m[41m                [m
[32m+[m[32m                // V√©rifie que le mail fait entre 5 et 100 caract√®res[m
[32m+[m[32m                $emailLength = strlen($_POST['email']);[m
[32m+[m[32m                if ($emailLength < 5 || $emailLength > 100) {[m
[32m+[m[32m                    $errors[] = "L'adresse email doit comporter entre 5 et 100 caract√®res.";[m
[32m+[m[32m                }[m
[32m+[m[32m                // V√©rifie que le mot de passe fait minimum 8 caract√®res[m
[32m+[m[32m                if (strlen($_POST['password']) < 8) {[m
[32m+[m[32m                    $errors[] = "Le mot de passe doit comporter au moins 8 caract√®res.";[m[41m [m
[32m+[m[32m                }[m
[32m+[m[32m                // V√©rifie que les mots de passe correspondent[m
[32m+[m[32m                if ($_POST['password'] !== $_POST['confirm_password']) {[m
[32m+[m[32m                    $errors[] = "Les mots de passe saisis ne correspondent pas.";[m[41m [m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            // Ne se lance que si on n'a eu aucune erreur avant[m
[32m+[m[32m            if (empty($errors)) {[m
[32m+[m[32m                $userManager = new UserManager();[m
[32m+[m[32m                // V√©rifie si l'adresse mail n'existe pas d√©j√†[m
[32m+[m[32m                $nicknameAlreadyExists = $userManager->findByNickname($_POST['nickname']);[m
[32m+[m[32m                $mailAlreadyExists = $userManager->findByEmail($_POST['email']);[m
[32m+[m[41m                [m
[32m+[m[32m                if ($nicknameAlreadyExists) {[m
[32m+[m[32m                    $errors[] = "Ce pseudonyme existe d√©j√†.";[m
[32m+[m[32m                }[m
[32m+[m[32m                elseif ($mailAlreadyExists) {[m
[32m+[m[32m                    $errors[] = "Cette adresse email existe d√©j√†.";[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $user = new User();[m
[32m+[m[32m                    // On hydrate avec les set[m
[32m+[m[32m                    $user->setNickname($_POST['nickname']);[m
[32m+[m[32m                    $user->setEmail($_POST['email']);[m
[32m+[m[32m                    // password_hash est une fonction de PHP[m
[32m+[m[32m                    $passwordHash = password_hash($_POST['password'], PASSWORD_BCRYPT);[m
[32m+[m[32m                    $user->setPassword($passwordHash);[m
[32m+[m[32m                    $userManager->add($user);[m
[32m+[m[32m                    // On redirige vers la page de connexion[m
[32m+[m[32m                    $this->redirectToRoute('app_user_login');[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        $this->renderView('user/signup.php', [[m
[32m+[m[32m            'title' => 'Inscription',[m
[32m+[m[32m            'errors' => $errors[m
[32m+[m[32m        ]);[m
[32m+[m[41m        [m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function login(): void {[m
[32m+[m[32m        $errors = [];[m
[32m+[m[32m        if (!empty($_POST)) {[m
[32m+[m[32m            if (empty($_POST['email']) || empty($_POST['password'])) {[m
[32m+[m[32m                $errors[] = "Tous les champs doivent √™tre saisis.";[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $userManager = new UserManager();[m
[32m+[m[32m                $user = $userManager->findByEmail($_POST['email']);[m
[32m+[m[32m                if (!$user) {[m
[32m+[m[32m                    $errors[] = "Aucun compte n'est associ√© √† cette adresse email.";[m
[32m+[m[32m                } elseif (!password_verify($_POST['password'], $user->getPassword())) {[m
[32m+[m[32m                    $errors[] = "Mauvais mot de passe.";[m
[32m+[m[32m                }[m
[32m+[m[32m            }[m
[32m+[m[32m            if (empty($errors)) {[m
[32m+[m[32m                Authenticator::login($user->getId());[m
[32m+[m[32m                $this->redirectToRoute('app_index');[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        $this->renderView('user/login.php', [[m
[32m+[m[32m            'title' => 'Connexion',[m
[32m+[m[32m            'errors' => $errors[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m	[32mpublic function logout(): void {[m
[32m+[m[32m        Authenticator::logout();[m
[32m+[m[32m        $this->redirectToRoute('app_index');[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m	[32mpublic function setting(): void {[m
[32m+[m	[32m    // !!!! WIP !!!![m
[32m+[m[32m        $this->redirectToRoute('app_user_login');[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function list(): void {[m
[32m+[m[32m        $userManager = new UserManager;[m
[32m+[m[32m        $users = $userManager->findAll();[m
[32m+[m[32m        $this->renderView('user/list.php', [[m
[32m+[m[32m        'title' => 'Liste des utilisateurs',[m
[32m+[m[32m        'users' => $users[m
[32m+[m[32m        ]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function delete(): void {[m
[32m+[m[32m        $authenticator = new Authenticator;[m
[32m+[m[32m        if ($authenticator->isAuthenticated()){[m
[32m+[m[32m            $role = $authenticator->getUser()->getRole();[m
[32m+[m[32m            if (isset($_GET['id']) && is_numeric($_GET['id'])) {[m
[32m+[m[32m                if ($role === true) {[m
[32m+[m[32m                    $userManager = new UserManager;[m
[32m+[m[32m                    $userManager->delete($_GET['id']);[m
[32m+[m[32m                    $this->redirectToRoute('app_user_list');[m
[32m+[m[32m                } else {[m
[32m+[m[32m                    $this->redirectToRoute('app_index');[m
[32m+[m[32m                }[m
[32m+[m[32m            } else {[m
[32m+[m[32m                $this->redirectToRoute('app_user_list');[m
[32m+[m[32m            }[m
[32m+[m[32m        } else {[m
[32m+[m[32m            $this->redirectToRoute('app_index');[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Model/Entity/Bookmark.php b/src/Model/Entity/Bookmark.php[m
[1mnew file mode 100644[m
[1mindex 0000000..0f28955[m
[1m--- /dev/null[m
[1m+++ b/src/Model/Entity/Bookmark.php[m
[36m@@ -0,0 +1,86 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Model\Entity;[m
[32m+[m
[32m+[m[32mclass Bookmark {[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    private int $id;[m
[32m+[m[32m    private string $title;[m
[32m+[m[32m    private string $picture_url;[m
[32m+[m[32m    private string $url;[m
[32m+[m[32m    private string $content;[m
[32m+[m[32m    private \DateTime $created_at;[m
[32m+[m[32m    //private int $user_id;[m
[32m+[m
[32m+[m[41m    [m
[32m+[m[32m    public function __construct(array $bookmark = []) {[m
[32m+[m[32m        if (isset($bookmark['id'])) {[m
[32m+[m[32m            $this->id = (int) $bookmark['id'];[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isset($bookmark['title'])) {[m
[32m+[m[32m            $this->title = (int) $bookmark['title'];[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isset($bookmark['picture_url'])) {[m
[32m+[m[32m            $this->pictureUrl = (int) $bookmark['picture_url'];[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isset($bookmark['url'])) {[m
[32m+[m[32m            $this->url = (int) $bookmark['url'];[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isset($bookmark['content'])) {[m
[32m+[m[32m            $this->content = (string) $bookmark['content'];[m
[32m+[m[32m        }[m
[32m+[m[32m        if (isset($bookmark['created_at'])) {[m
[32m+[m[32m            $this->created_at = new \DateTime($bookmark['created_at']);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function getId(): int {[m
[32m+[m[32m        return $this->id;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function getTitle(): string {[m
[32m+[m[32m        return $this->title;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function getPictureUrl(): string {[m
[32m+[m[32m        return $this->picture_url;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function getUrl(): string {[m
[32m+[m[32m        return $this->url;[m
[32m+[m[32m    }[m
[32m+[m[41m        [m
[32m+[m[32m    public function getContent(): string {[m
[32m+[m[32m        return $this->content;[m
[32m+[m[32m    }[m
[32m+[m[41m        [m
[32m+[m[32m    public function getCreatedAt(): \DateTime {[m
[32m+[m[32m        return $this->created_at;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function setId(int $id) {[m
[32m+[m[32m        $this->id = $id;[m
[32m+[m[32m    }[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    public function setTitle(string $title) {[m
[32m+[m[32m        $this->title = $title;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function setPictureUrl(string $picture_url) {[m
[32m+[m[32m        $this->picture_url = $picture_url;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function setUrl(string $url) {[m
[32m+[m[32m        $this->url = $url;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function setContent(string $content) {[m
[32m+[m[32m        $this->content = $content;[m
[32m+[m[32m    }[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m    public function setCreatedAt(\DateTime $created_at) {[m
[32m+[m[32m        $this->created_at = $created_at;[m
[32m+[m[32m    }[m[41m [m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Model/Entity/User.php b/src/Model/Entity/User.php[m
[1mnew file mode 100644[m
[1mindex 0000000..833f474[m
[1m--- /dev/null[m
[1m+++ b/src/Model/Entity/User.php[m
[36m@@ -0,0 +1,82 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Model\Entity;[m
[32m+[m
[32m+[m[32mclass User {[m
[32m+[m
[32m+[m[32m    private int $id;[m
[32m+[m[32m    private string $nickname;[m
[32m+[m[32m    private string $email;[m
[32m+[m[32m    private string $password;[m
[32m+[m[32m    private \DateTime $createdAt;[m
[32m+[m[32m    private \DateTime $updatedAt;[m
[32m+[m[32m    private bool $role;[m
[32m+[m
[32m+[m[32m    public function __construct(?array $user = []) {[m
[32m+[m[32m        if (isset($user['id']))[m[41m [m
[32m+[m[32m            $this->id = (int) $user['id'];[m
[32m+[m[32m        if (isset($user['nickname']))[m[41m [m
[32m+[m[32m            $this->nickname = (string) $user['nickname'];[m
[32m+[m[32m        if (isset($user['email']))[m[41m [m
[32m+[m[32m            $this->email = (string) $user['email'];[m
[32m+[m[32m        if (isset($user['password']))[m[41m [m
[32m+[m[32m            $this->password = (string) $user['password'];[m
[32m+[m[32m        if (isset($user['created_at']))[m[41m [m
[32m+[m[32m            $this->createdAt = new \DateTime($user['created_at']);[m
[32m+[m[32m        if (isset($user['updated_at']))[m[41m [m
[32m+[m[32m            $this->updatedAt = new \DateTime($user['updated_at']);[m
[32m+[m[32m        if (isset($user['role']))[m[41m [m
[32m+[m[32m            $this->role = (bool) $user['role'];[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getId(): int {[m
[32m+[m[32m        return $this->id;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // Pas de setId(), √ßa ne se modifie pas![m
[32m+[m[41m    [m
[32m+[m[32m    public function getNickname(): string {[m
[32m+[m[32m        return $this->nickname;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function setNickname(string $nickname): void {[m
[32m+[m[32m        $this->nickname = $nickname;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getEmail(): string {[m
[32m+[m[32m        return $this->email;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function setEmail(string $email): void {[m
[32m+[m[32m        $this->email = $email;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getPassword(): string {[m
[32m+[m[32m        return $this->password;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function setPassword(string $password): void {[m
[32m+[m[32m        $this->password = $password;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getCreatedAt(): \Datetime {[m
[32m+[m[32m        return $this->createdAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function setCreatedAt(\Datetime $createdAt): void {[m
[32m+[m[32m        $this->createdAt = $createdAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function getUpdatedAt(): \Datetime {[m
[32m+[m[32m      return $this->updatedAt;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public function setUpdatedAt(\Datetime $updatedAt): void {[m
[32m+[m[32m        $this->updatedAt = $updatedAt;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function getRole(): bool {[m
[32m+[m[32m        return $this->role;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Model/Manager/TaskManager.php b/src/Model/Manager/TaskManager.php[m
[1mnew file mode 100644[m
[1mindex 0000000..74cfae6[m
[1m--- /dev/null[m
[1m+++ b/src/Model/Manager/TaskManager.php[m
[36m@@ -0,0 +1,41 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Model\Manager;[m
[32m+[m
[32m+[m[32muse Symfonette\Manager;[m
[32m+[m[32muse App\Model\Entity\Task;[m
[32m+[m
[32m+[m[32mclass TaskManager extends Manager {[m
[32m+[m[41m    [m
[32m+[m[32m    // LECTURE (READ)[m
[32m+[m[32m    public function findAll(): array {[m
[32m+[m[32m        $sql = 'SELECT * FROM tasks';[m
[32m+[m[32m        // On n'a pas besoin de pr√©parer la requ√™te, on ne fait pas passer de param√®tres (pas d'injection SQL)[m
[32m+[m[32m        $query = $this->connection->query($sql);[m
[32m+[m[32m        $tasks = $query->fetchAll();[m
[32m+[m[32m        // De base $task nous retourne un objet qui contient un tableau avec √©norm√©ment de donn√©es, on ne peut pas l'instancier comme √ßa[m
[32m+[m[32m        $tasksObjects = [];[m
[32m+[m[32m        // On parcourt chaque ligne du tableau et on fait un objet pour chacune[m
[32m+[m	[32m    foreach ($tasks as $task) {[m
[32m+[m			[32marray_push($tasksObjects, new Task($task));[m
[32m+[m		[32m}[m
[32m+[m[32m        return $tasksObjects;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function find(int $id): ?Task { // ? pour √ßa que √ßa retourne null ou Task[m
[32m+[m[32m        $sql = 'SELECT * FROM tasks WHERE tasks.id = :id';[m
[32m+[m[32m        // On pr√©pare parce qu'on passe des param√®tres[m
[32m+[m[32m        $query = $this->connection->prepare($sql);[m
[32m+[m[32m        $query->execute([[m
[32m+[m[32m            'id' => $id[m
[32m+[m[32m            ]);[m
[32m+[m[32m        $task = $query->fetch();[m
[32m+[m[32m        if (!$task || empty($task)) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m        return new Task($task);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    // ECRITURE (CREATE, UPDATE, DELETE)[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/src/Model/Manager/UserManager.php b/src/Model/Manager/UserManager.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2edaacb[m
[1m--- /dev/null[m
[1m+++ b/src/Model/Manager/UserManager.php[m
[36m@@ -0,0 +1,81 @@[m
[32m+[m[32m<?php[m
[32m+[m
[32m+[m[32mnamespace App\Model\Manager;[m
[32m+[m
[32m+[m[32muse Symfonette\Manager;[m
[32m+[m[32muse App\Model\Entity\User;[m
[32m+[m
[32m+[m[32mclass UserManager extends Manager {[m
[32m+[m[41m    [m
[32m+[m[32m    public function add(User $user): void {[m
[32m+[m[32m        $sql = 'INSERT INTO users (nickname, email, password, created_at) VALUES (:nickname, :email, :password, :created_at)';[m
[32m+[m[32m        $query = $this->connection->prepare($sql);[m
[32m+[m[32m        $query->execute([[m
[32m+[m[32m            'nickname' => $user->getNickname(),[m
[32m+[m		[32m    'email' => $user->getEmail(),[m
[32m+[m			[32m'password' => $user->getPassword(),[m
[32m+[m			[32m// Rappel, on met \DateTime parce qu'on fait appel √† une classe de PHP[m
[32m+[m			[32m'created_at' => date_format(new \DateTime('NOW'), 'Y-m-d H:i:s')[m
[32m+[m		[32m]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m	[32mpublic function find(int $id): ?User {[m
[32m+[m[32m        $sql = 'SELECT * FROM users WHERE users.id = :id';[m
[32m+[m[32m        $query = $this->connection->prepare($sql);[m
[32m+[m	[32m    $query->execute([[m
[32m+[m[32m            'id' => $id[m
[32m+[m		[32m]);[m
[32m+[m[32m        $user = $query->fetch();[m
[32m+[m[32m        if (!$user || empty($user)) {[m
[32m+[m[32m            return null;[m
[32m+[m		[32m}[m
[32m+[m		[32mreturn new User($user);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    public function findAll(): array {[m
[32m+[m[32m        $sql = 'SELECT * FROM users';[m
[32m+[m[32m        $query = $this->connection->query($sql);[m
[32m+[m[32m        $users = $query->fetchAll();[m
[32m+[m[32m        $userObjects = [];[m
[32m+[m[32m        // On parcourt chaque ligne du tableau et on fait un objet pour chacune[m
[32m+[m	[32m    foreach ($users as $user) {[m
[32m+[m			[32marray_push($userObjects, new User($user));[m
[32m+[m		[32m}[m
[32m+[m[32m        return $userObjects;[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m	[32mpublic function findByNickname(string $nickname): ?User {[m
[32m+[m[32m        $sql = 'SELECT * FROM users WHERE users.nickname = :nickname';[m
[32m+[m[32m        $query = $this->connection->prepare($sql);[m
[32m+[m[32m        $query->execute([[m
[32m+[m	[32m        'nickname' => $nickname[m
[32m+[m[32m        ]);[m
[32m+[m[32m        $user = $query->fetch();[m
[32m+[m[32m        if (!$user || empty($user)) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m        return new User($user);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m	[32mpublic function findByEmail(string $email): ?User {[m
[32m+[m[32m        $sql = 'SELECT * FROM users WHERE users.email = :email';[m
[32m+[m[32m        $query = $this->connection->prepare($sql);[m
[32m+[m[32m        $query->execute([[m
[32m+[m	[32m        'email' => $email[m
[32m+[m[32m        ]);[m
[32m+[m[32m        $user = $query->fetch();[m
[32m+[m[32m        if (!$user || empty($user)) {[m
[32m+[m[32m            return null;[m
[32m+[m[32m        }[m
[32m+[m[32m        return new User($user);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m    function delete(int $id): void {[m
[32m+[m[32m      $sql = "DELETE FROM users WHERE id = :id";[m
[32m+[m[32m      $query = $this->connection->prepare($sql);[m
[32m+[m[32m      $query->execute([[m
[32m+[m[32m        'id' => $id[m
[32m+[m[32m      ]);[m
[32m+[m[32m    }[m
[32m+[m[41m    [m
[32m+[m[32m}[m
\ No newline at end of file[m
[1mdiff --git a/style.css b/style.css[m
[1mnew file mode 100644[m
[1mindex 0000000..8ec10bf[m
[1m--- /dev/null[m
[1m+++ b/style.css[m
[36m@@ -0,0 +1,619 @@[m
[32m+[m[32m@charset "UTF-8";[m
[32m+[m[32m:root {[m
[32m+[m[32m  --color-light: #F9F6FF;[m
[32m+[m[32m  --color-dark: #31393C;[m
[32m+[m[32m  --color-primary: #76B099;[m
[32m+[m[32m  --color-secondary: #A882DD;[m
[32m+[m[32m  --color-tertiary: #EBE6A6;[m
[32m+[m[32m  --color-success: #0cb16f;[m
[32m+[m[32m  --color-danger: #c53023;[m
[32m+[m[32m  --color-warning: #e8ae00;[m
[32m+[m[32m  --font-size: 18px;[m
[32m+[m[32m  --spacing: 1.5rem;[m
[32m+[m[32m  --border-radius: .5rem;[m
[32m+[m[32m  --typo: "Manrope", sans-serif;[m
[32m+[m[32m  --typo-title: font-family: 'Righteous', cursive;[m
[32m+[m[32m  --spacingd2: calc(var(--spacing) / 2);[m
[32m+[m[32m  --spacingx2: calc(var(--spacing) * 2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* <link href="https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800&display=swap" rel="stylesheet"> */[m
[32m+[m[32m*, *::after, *::before {[m
[32m+[m[32m  box-sizing: border-box;[m
[32m+[m[32m  margin: 0;[m
[32m+[m[32m  padding: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mbody {[m
[32m+[m[32m  font-family: var(--typo);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32ma {[m
[32m+[m[32m  text-decoration: none;[m
[32m+[m[32m  color: var(--color-primary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ============================== */[m
[32m+[m[32m/* ========== CONTAINER ========= */[m
[32m+[m[32m/* ============================== */[m
[32m+[m[32m.container {[m
[32m+[m[32m  max-width: 575px;[m
[32m+[m[32m  margin: 0 auto;[m
[32m+[m[32m  padding: var(--spacing);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m@media (min-width: 576px) and (max-width: 767px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 540px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m@media (min-width: 768px) and (max-width: 991px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 720px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m@media (min-width: 992px) and (max-width: 1199px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 960px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m@media (min-width: 1200px) {[m
[32m+[m[32m  .container {[m
[32m+[m[32m    max-width: 1140px;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m/* ========== GRILLE ========= */[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m.grid {[m
[32m+[m[32m  display: grid;[m
[32m+[m[32m  grid-template-columns: repeat(12, 1fr);[m
[32m+[m[32m  gap: var(--spacing);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.grid > * {[m
[32m+[m[32m  grid-column: span 12;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-1 {[m
[32m+[m[32m  grid-column: span 1;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-2 {[m
[32m+[m[32m  grid-column: span 2;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-3 {[m
[32m+[m[32m  grid-column: span 3;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-4 {[m
[32m+[m[32m  grid-column: span 4;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-5 {[m
[32m+[m[32m  grid-column: span 5;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-6 {[m
[32m+[m[32m  grid-column: span 6;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-7 {[m
[32m+[m[32m  grid-column: span 7;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-8 {[m
[32m+[m[32m  grid-column: span 8;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-9 {[m
[32m+[m[32m  grid-column: span 9;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-10 {[m
[32m+[m[32m  grid-column: span 10;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.col-11 {[m
[32m+[m[32m  grid-column: span 11;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* MEDIA QUERIES */[m
[32m+[m[32m@media screen and (min-width: 768px) {[m
[32m+[m[32m  .col-m-1 {[m
[32m+[m[32m    grid-column: span 1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-2 {[m
[32m+[m[32m    grid-column: span 2;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-3 {[m
[32m+[m[32m    grid-column: span 3;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-4 {[m
[32m+[m[32m    grid-column: span 4;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-5 {[m
[32m+[m[32m    grid-column: span 5;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-6 {[m
[32m+[m[32m    grid-column: span 6;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-7 {[m
[32m+[m[32m    grid-column: span 7;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-8 {[m
[32m+[m[32m    grid-column: span 8;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-9 {[m
[32m+[m[32m    grid-column: span 9;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-10 {[m
[32m+[m[32m    grid-column: span 10;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-m-11 {[m
[32m+[m[32m    grid-column: span 11;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m@media screen and (min-width: 1024px) {[m
[32m+[m[32m  .col-l-1 {[m
[32m+[m[32m    grid-column: span 1;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-2 {[m
[32m+[m[32m    grid-column: span 2;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-3 {[m
[32m+[m[32m    grid-column: span 3;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-4 {[m
[32m+[m[32m    grid-column: span 4;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-5 {[m
[32m+[m[32m    grid-column: span 5;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-6 {[m
[32m+[m[32m    grid-column: span 6;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-7 {[m
[32m+[m[32m    grid-column: span 7;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-8 {[m
[32m+[m[32m    grid-column: span 8;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-9 {[m
[32m+[m[32m    grid-column: span 9;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-10 {[m
[32m+[m[32m    grid-column: span 10;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  .col-l-11 {[m
[32m+[m[32m    grid-column: span 11;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m[32m/* ========================= */[m
[32m+[m[32m/* ========== TEXT ========= */[m
[32m+[m[32m/* ========================= */[m
[32m+[m[32m.text-light {[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-dark {[m
[32m+[m[32m  color: var(--color-dark);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-primary {[m
[32m+[m[32m  color: var(--color-primary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-secondary {[m
[32m+[m[32m  color: var(--color-secondary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-tertiary {[m
[32m+[m[32m  color: var(--color-tertiary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-small {[m
[32m+[m[32m  font-size: 75%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-big {[m
[32m+[m[32m  font-size: 150%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-upper {[m
[32m+[m[32m  text-transform: uppercase;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-lower {[m
[32m+[m[32m  text-transform: lowercase;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-thin {[m
[32m+[m[32m  font-weight: 200;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.text-bold {[m
[32m+[m[32m  font-weight: 700;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m/* ========== FONDS ========== */[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m.bg-light {[m
[32m+[m[32m  background-color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.bg-dark {[m
[32m+[m[32m  background-color: var(--color-dark);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.bg-primary {[m
[32m+[m[32m  background-color: var(--color-primary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.bg-secondary {[m
[32m+[m[32m  background-color: var(--color-secondary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.bg-tertiary {[m
[32m+[m[32m  background-color: var(--color-tertiary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ============================= */[m
[32m+[m[32m/* ========== SPACINGS ========= */[m
[32m+[m[32m/* ============================= */[m
[32m+[m[32m/* MARGIN */[m
[32m+[m[32m.m-none {[m
[32m+[m[32m  margin: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mt-small {[m
[32m+[m[32m  margin-top: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mt-big {[m
[32m+[m[32m  margin-top: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mb-small {[m
[32m+[m[32m  margin-bottom: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mb-big {[m
[32m+[m[32m  margin-bottom: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.ml-small {[m
[32m+[m[32m  margin-left: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.ml-big {[m
[32m+[m[32m  margin-left: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mr-small {[m
[32m+[m[32m  margin-right: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mr-big {[m
[32m+[m[32m  margin-right: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.my-small {[m
[32m+[m[32m  margin-top: var(--spacingd2);[m
[32m+[m[32m  margin-bottom: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.my-big {[m
[32m+[m[32m  margin-top: var(--spacingx2);[m
[32m+[m[32m  margin-bottom: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mx-small {[m
[32m+[m[32m  margin-left: var(--spacingd2);[m
[32m+[m[32m  margin-right: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.mx-big {[m
[32m+[m[32m  margin-left: var(--spacingx2);[m
[32m+[m[32m  margin-right: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.m-small {[m
[32m+[m[32m  margin: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.m-big {[m
[32m+[m[32m  margin: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* PADDING */[m
[32m+[m[32m.p-none {[m
[32m+[m[32m  padding: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pt-small {[m
[32m+[m[32m  padding-top: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pt-big {[m
[32m+[m[32m  padding-top: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pb-small {[m
[32m+[m[32m  padding-bottom: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pb-big {[m
[32m+[m[32m  padding-bottom: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pl-small {[m
[32m+[m[32m  padding-left: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pl-big {[m
[32m+[m[32m  padding-left: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pr-small {[m
[32m+[m[32m  padding-right: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.pr-big {[m
[32m+[m[32m  padding-right: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.py-small {[m
[32m+[m[32m  padding-top: var(--spacingd2);[m
[32m+[m[32m  padding-bottom: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.py-big {[m
[32m+[m[32m  padding-top: var(--spacingx2);[m
[32m+[m[32m  padding-bottom: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.px-small {[m
[32m+[m[32m  padding-left: var(--spacingd2);[m
[32m+[m[32m  padding-right: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.px-big {[m
[32m+[m[32m  padding-left: var(--spacingx2);[m
[32m+[m[32m  padding-right: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.p-small {[m
[32m+[m[32m  padding: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.p-big {[m
[32m+[m[32m  padding: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* GAP */[m
[32m+[m[32m.g-none {[m
[32m+[m[32m  gap: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.g-small {[m
[32m+[m[32m  gap: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.g-big {[m
[32m+[m[32m  gap: var(--spacingx2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m/* ========== IMAGES ========= */[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m.img-full {[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ========================= */[m
[32m+[m[32m/* ========== FLEX ========= */[m
[32m+[m[32m/* ========================= */[m
[32m+[m[32m.flex {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.align-center {[m
[32m+[m[32m  align-items: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.justify-center {[m
[32m+[m[32m  justify-content: center;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ============================= */[m
[32m+[m[32m/* ========== SECTIONS ========= */[m
[32m+[m[32m/* ============================= */[m
[32m+[m[32m.section-light {[m
[32m+[m[32m  background-color: var(--color-light);[m
[32m+[m[32m  color: var(--color-dark);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.section-dark {[m
[32m+[m[32m  background-color: var(--color-dark);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.section-primary {[m
[32m+[m[32m  background-color: var(--color-primary);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.section-secondary {[m
[32m+[m[32m  background-color: var(--color-secondary);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m/* =========== NAV ========== */[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m/* Utiliser le grid d√©fini avant, 2 col 8 col et 2 col par exemple */[m
[32m+[m[32mnav {[m
[32m+[m[32m  background-color: var(--color-tertiary);[m
[32m+[m[32m  padding: 0.5em 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mnav > ul > li {[m
[32m+[m[32m  margin: 0 auto;[m
[32m+[m[32m  list-style: none;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m/* ========== BUTTON ========= */[m
[32m+[m[32m/* =========================== */[m
[32m+[m[32m.btn {[m
[32m+[m[32m  display: inline-block;[m
[32m+[m[32m  padding: var(--spacingd2) var(--spacing);[m
[32m+[m[32m  border-radius: var(--border-radius);[m
[32m+[m[32m  border-width: 2px;[m
[32m+[m[32m  border-style: solid;[m
[32m+[m[32m  transition: 0.25s;[m
[32m+[m[32m  border-color: var(--color-secondary);[m
[32m+[m[32m  background-color: var(--color-secondary);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m/* ========== FORMS ========= */[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32mlabel {[m
[32m+[m[32m  padding: 0 1rem;[m
[32m+[m[32m  color: var(--color-dark);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32minput.field {[m
[32m+[m[32m  padding: 0 0.5rem;[m
[32m+[m[32m  height: 2rem;[m
[32m+[m[32m  width: 15rem;[m
[32m+[m[32m  border-radius: var(--border-radius);[m
[32m+[m[32m  background-color: var(--color-tertiary);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m/* ========== ALERT ========= */[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m.alert {[m
[32m+[m[32m  padding: var(--spacingx2) var(--spacing);[m
[32m+[m[32m  border-radius: var(--border-radius);[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  justify-content: space-between;[m
[32m+[m[32m  align-items: center;[m
[32m+[m[32m  gap: var(--spacing);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-close {[m
[32m+[m[32m  font-size: 1.75rem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-close:hover {[m
[32m+[m[32m  cursor: pointer;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-light {[m
[32m+[m[32m  background-color: var(--color-light);[m
[32m+[m[32m  color: var(--color-dark);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-dark {[m
[32m+[m[32m  background-color: var(--color-dark);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-primary {[m
[32m+[m[32m  background-color: var(--color-primary);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-secondary {[m
[32m+[m[32m  background-color: var(--color-secondary);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-tertiary {[m
[32m+[m[32m  background-color: var(--color-tertiary);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-success {[m
[32m+[m[32m  background-color: var(--color-success);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-danger {[m
[32m+[m[32m  background-color: var(--color-danger);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.alert-warning {[m
[32m+[m[32m  background-color: var(--color-warning);[m
[32m+[m[32m  color: var(--color-light);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m/* ========== CARDS ========= */[m
[32m+[m[32m/* ========================== */[m
[32m+[m[32m.card {[m
[32m+[m[32m  box-shadow: 0.25rem 0.125rem 1rem rgba(0, 0, 0, 0.08);[m
[32m+[m[32m  border-radius: var(--border-radius);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.card-header img {[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  display: block;[m
[32m+[m[32m  border-top-left-radius: var(--border-radius);[m
[32m+[m[32m  border-top-right-radius: var(--border-radius);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.card-body {[m
[32m+[m[32m  padding: var(--spacing);[m
[32m+[m[32m  background-color: var(--color-light);[m
[32m+[m[32m  color: var(--color-dark);[m
[32m+[m[32m  border-bottom-left-radius: var(--border-radius);[m
[32m+[m[32m  border-bottom-right-radius: var(--border-radius);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.card-body h2,[m
[32m+[m[32m.card-body h3,[m
[32m+[m[32m.card-body h4,[m
[32m+[m[32m.card-body h5,[m
[32m+[m[32m.card-body h6 {[m
[32m+[m[32m  font-size: 1.75rem;[m
[32m+[m[32m  font-weight: 700;[m
[32m+[m[32m  margin-bottom: var(--spacingd2);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.card-buttons {[m
[32m+[m[32m  margin-top: var(--spacing);[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  flex-wrap: wrap;[m
[32m+[m[32m  gap: calc(var(--spacing) / 4);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/*# sourceMappingURL=style.css.map */[m
[1mdiff --git a/views/layout.php b/views/layout.php[m
[1mnew file mode 100644[m
[1mindex 0000000..08310ea[m
[1m--- /dev/null[m
[1m+++ b/views/layout.php[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32m<!doctype html>[m
[32m+[m[32m<html lang="fr">[m
[32m+[m[32m<head>[m
[32m+[m[32m  <meta charset="UTF-8">[m
[32m+[m	[32m<meta name="viewport" content="width=device-width, initial-scale=1.0">[m
[32m+[m	[32m<link href="https://fonts.googleapis.com/css2?family=Manrope:wght@200;300;400;500;600;700;800&display=swap" rel="stylesheet">[m
[32m+[m	[32m<link href="https://fonts.googleapis.com/css2?family=Righteous&display=swap" rel="stylesheet">[m
[32m+[m	[32m<link rel="stylesheet" href="style.css" type="text/css" />[m
[32m+[m	[32m<link rel="stylesheet" href="add.css" type="text/css" />[m
[32m+[m	[32m<script src="https://kit.fontawesome.com/e856ee4135.js" crossorigin="anonymous"></script>[m
[32m+[m[32m  <title><?= $data['title'] ?> - MVC</title>[m
[32m+[m[32m</head>[m
[32m+[m[32m<body>[m
[32m+[m[32m  <?php require './views/partials/_header.php'; ?>[m
[32m+[m[32m  <main>[m
[32m+[m[32m    <?php require $templatePath ?>[m
[32m+[m[32m  </main>[m
[32m+[m[32m  <?php require './views/partials/_footer.php'; ?>[m
[32m+[m[41m  [m
[32m+[m[32m  <script type="text/javascript" src="scripts.js"></script>[m
[32m+[m[32m</body>[m
[32m+[m[32m</html>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/app/index.php b/views/pages/app/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..2eaec5c[m
[1m--- /dev/null[m
[1m+++ b/views/pages/app/index.php[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32m<main class="container">[m
[32m+[m[41m    [m
[32m+[m[32m    <p class="reminder">Re-Minder</p>[m
[32m+[m
[32m+[m[32m    <article class="flex justify-center align-center m-big">[m
[32m+[m[32m        <div class="presentation">[m
[32m+[m[32m            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga, mollitia cumque facere ducimus explicabo molestiae sed maxime nulla aperiam ad?.</p>[m
[32m+[m[41m            [m
[32m+[m[32m            <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dolor, molestiae, soluta debitis sit expedita quidem a nobis suscipit. Aliquid, commodi.</p>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    </article>[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    <article class="carousel">[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m    </article>[m
[32m+[m[41m    [m
[32m+[m[32m</main>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/bookmark/add.php b/views/pages/bookmark/add.php[m
[1mnew file mode 100644[m
[1mindex 0000000..02d5389[m
[1m--- /dev/null[m
[1m+++ b/views/pages/bookmark/add.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>Add</h1>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/bookmark/edit.php b/views/pages/bookmark/edit.php[m
[1mnew file mode 100644[m
[1mindex 0000000..f7a4026[m
[1m--- /dev/null[m
[1m+++ b/views/pages/bookmark/edit.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>Edit</h1>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/bookmark/index.php b/views/pages/bookmark/index.php[m
[1mnew file mode 100644[m
[1mindex 0000000..c99b550[m
[1m--- /dev/null[m
[1m+++ b/views/pages/bookmark/index.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>Index favoris</h1>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/user/_errors.php b/views/pages/user/_errors.php[m
[1mnew file mode 100644[m
[1mindex 0000000..463dd8d[m
[1m--- /dev/null[m
[1m+++ b/views/pages/user/_errors.php[m
[36m@@ -0,0 +1,5 @@[m
[32m+[m[32m<?php if (!empty($data['errors'])) { ?>[m
[32m+[m[32m  <?php foreach ($data['errors'] as $error) { ?>[m
[32m+[m	[32m  <p class="alert alert-danger"><?= $error ?></p>[m
[32m+[m[32m  <?php } ?>[m
[32m+[m[32m<?php } ?>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/user/list.php b/views/pages/user/list.php[m
[1mnew file mode 100644[m
[1mindex 0000000..8188886[m
[1m--- /dev/null[m
[1m+++ b/views/pages/user/list.php[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32m<h1>Mes utilisateurs</h1>[m
[32m+[m
[32m+[m[32m<?php foreach($data['users'] as $user) { ?>[m
[32m+[m[32m<p><?= $user->getNickname() ?></p>[m
[32m+[m[32m<a href="index.php?page=app_user_delete&id=<?= $user->getId() ?>">Supprimer utilisateur</a>[m
[32m+[m[32m<?php } ?>[m
[32m+[m
[1mdiff --git a/views/pages/user/login.php b/views/pages/user/login.php[m
[1mnew file mode 100644[m
[1mindex 0000000..7f3a77d[m
[1m--- /dev/null[m
[1m+++ b/views/pages/user/login.php[m
[36m@@ -0,0 +1,15 @@[m
[32m+[m[32m<h1>Connexion</h1>[m
[32m+[m
[32m+[m[32m<form action="" method="POST">[m
[32m+[m[41m    [m
[32m+[m[32m    <?php include '_errors.php' ?>[m
[32m+[m[41m    [m
[32m+[m[32m    <label for="email">Email</label>[m
[32m+[m[32m    <input type="email" name="email" id="email" required>[m
[32m+[m[41m    [m
[32m+[m[32m    <label for="password">Password</label>[m
[32m+[m[32m    <input type="password" name="password" id="password" required>[m
[32m+[m[41m    [m
[32m+[m[32m    <button type="submit">Se connecter</button>[m
[32m+[m[41m    [m
[32m+[m[32m</form>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/user/setting.php b/views/pages/user/setting.php[m
[1mnew file mode 100644[m
[1mindex 0000000..b1c8352[m
[1m--- /dev/null[m
[1m+++ b/views/pages/user/setting.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>Param√®tres</h1>[m
\ No newline at end of file[m
[1mdiff --git a/views/pages/user/signup.php b/views/pages/user/signup.php[m
[1mnew file mode 100644[m
[1mindex 0000000..4f64c15[m
[1m--- /dev/null[m
[1m+++ b/views/pages/user/signup.php[m
[36m@@ -0,0 +1,31 @@[m
[32m+[m[32m<h1>Inscription</h1>[m
[32m+[m
[32m+[m[32m<?php include '_errors.php' ?>[m
[32m+[m
[32m+[m[32m<form action="" method="POST">[m
[32m+[m[41m  [m
[32m+[m[32m  <label for="nickname">Pseudonyme</label>[m
[32m+[m[32m  <input type="text" id="nickname" name="nickname" required>[m
[32m+[m[41m    [m
[32m+[m[32m  <label for="email">Adresse email</label>[m
[32m+[m[32m  <input type="email" id="email" name="email" required>[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  <div class="grid">[m
[32m+[m[41m      [m
[32m+[m[32m    <label for="password">[m
[32m+[m[32m      Mot de passe[m
[32m+[m[32m      <input type="password" id="password" name="password" required>[m
[32m+[m[32m    </label>[m
[32m+[m[41m    [m
[32m+[m[32m    <label for="confirm_password">[m
[32m+[m[32m      R√©p√©tez votre mot de passe[m
[32m+[m[32m      <input type="password" id="confirm_password" name="confirm_password" required>[m
[32m+[m[32m    </label>[m
[32m+[m[41m    [m
[32m+[m[32m  </div>[m
[32m+[m[41m  [m
[32m+[m[41m  [m
[32m+[m[32m  <button type="submit">S'inscrire</button>[m
[32m+[m[41m  [m
[32m+[m[32m</form>[m
\ No newline at end of file[m
[1mdiff --git a/views/partials/_footer.php b/views/partials/_footer.php[m
[1mnew file mode 100644[m
[1mindex 0000000..83ae25b[m
[1m--- /dev/null[m
[1m+++ b/views/partials/_footer.php[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32m<h1>FOOTER</h1>[m
\ No newline at end of file[m
[1mdiff --git a/views/partials/_header.php b/views/partials/_header.php[m
[1mnew file mode 100644[m
[1mindex 0000000..3e1a281[m
[1m--- /dev/null[m
[1m+++ b/views/partials/_header.php[m
[36m@@ -0,0 +1,62 @@[m
[32m+[m[32m<header class="bg-tertiary grid">[m
[32m+[m[41m    [m
[32m+[m[32m    <nav  id="btn-toggle" class="nav-menu col-2 col-m-3 col-l-3">[m
[32m+[m[32m        <?php if ($auth->isAuthenticated()) { ?>[m
[32m+[m[41m                [m
[32m+[m[32m           <ul class="top-ul">[m
[32m+[m[32m                <li class="nav-list">HOME</li>[m
[32m+[m[